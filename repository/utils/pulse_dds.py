from artiq.experiment import *
from artiq.language.core import  kernel, TerminationRequested

from acf.experiment import _ACFExperiment
from acf_sequences.sequences import sequences
from acf_config.arguments_definition import argument_manager

class PulseDDS(_ACFExperiment):       

    def build(self):
        self.setattr_device("core")
        self.setattr_device("zotino0")  # Add zotino0 device for DC control
        self.setup(sequences)

        self.setattr_argument(
            "if_pulse",
            BooleanValue(default=True),
            tooltip="Is pulsing effect on"
        )

        self.setattr_argument(
            "on_secs",
            NumberValue(default=0.2*s, unit="s", min=0*s, precision=8),
            tooltip="Seconds on"
        )

        self.setattr_argument(
            "off_secs",
            NumberValue(default=0.2*s, unit="s", min=0*s, precision=8),
            tooltip="Seconds off"
        )

        self.setattr_argument(
            "scan_dc_voltages",
            BooleanValue(default=True),
            tooltip="Enable DC voltage scanning"
        )

        self.setattr_argument(
            "initial_voltage_set",
            NumberValue(default=0, min=0, max=100000, step=1, precision=0),
            tooltip="Initial voltage set index to start from (0-4)"
        )

        self.add_arg_from_param("frequency/397_cooling")
        self.add_arg_from_param("frequency/866_cooling")
        self.add_arg_from_param("frequency/854_dp")
        self.add_arg_from_param("frequency/397_far_detuned")
        
        self.add_arg_from_param("attenuation/397")
        self.add_arg_from_param("attenuation/866")
        self.add_arg_from_param("attenuation/854_dp")
        self.add_arg_from_param("attenuation/397_far_detuned")
        
        # Define the DC voltage sets similar to set_dc_manual.py
        self.channels = [i for i in range(32)]
        self.list_of_voltages = [{'DC21': 0.23155214357942017, 'DC20': -1.318499502024576, 'DC19': 0.637097547837925, 'DC18': 0.17521894060756044, 'DC17': -0.1510545017972783, 'DC16': -0.13729036534271769, 'DC15': -0.1167751297013837, 'DC14': -0.09963679353541442, 'DC13': -0.08179137564973005, 'DC12': -0.07019510703108102, 'DC10': -0.8077999501033459, 'DC9': -1.0341502571940693, 'DC8': -0.7659011048986776, 'DC7': -0.43520874523392056, 'DC6': -0.22623638022824805, 'DC5': -0.13240952092076874, 'DC4': -0.10062775589672768, 'DC3': -0.07791489898778287, 'DC2': -0.06152632302874346, 'DC1': -0.05112346564205642, 'DC11': -0.2609643043667047}, {'DC21': 0.3473282153691303, 'DC20': -1.977749253036864, 'DC19': 0.9556463217568876, 'DC18': 0.2628284109113407, 'DC17': -0.22658175269591746, 'DC16': -0.2059355480140765, 'DC15': -0.17516269455207553, 'DC14': -0.14945519030312165, 'DC13': -0.12268706347459508, 'DC12': -0.10529266054662152, 'DC10': -1.211699925155019, 'DC9': -1.551225385791104, 'DC8': -1.1488516573480165, 'DC7': -0.6528131178508809, 'DC6': -0.3393545703423721, 'DC5': -0.1986142813811531, 'DC4': -0.15094163384509152, 'DC3': -0.1168723484816743, 'DC2': -0.0922894845431152, 'DC1': -0.07668519846308464, 'DC11': -0.39144645655005705}, {'DC21': 0.46310428715884033, 'DC20': -2.636999004049152, 'DC19': 1.27419509567585, 'DC18': 0.35043788121512087, 'DC17': -0.3021090035945566, 'DC16': -0.27458073068543537, 'DC15': -0.2335502594027674, 'DC14': -0.19927358707082884, 'DC13': -0.1635827512994601, 'DC12': -0.14039021406216204, 'DC10': -1.6155999002066919, 'DC9': -2.0683005143881386, 'DC8': -1.5318022097973552, 'DC7': -0.8704174904678411, 'DC6': -0.4524727604564961, 'DC5': -0.2648190418415375, 'DC4': -0.20125551179345536, 'DC3': -0.15582979797556573, 'DC2': -0.12305264605748692, 'DC1': -0.10224693128411284, 'DC11': -0.5219286087334094}, {'DC21': 0.5788803589485505, 'DC20': -3.2962487550614403, 'DC19': 1.5927438695948126, 'DC18': 0.4380473515189011, 'DC17': -0.37763625449319577, 'DC16': -0.3432259133567942, 'DC15': -0.29193782425345927, 'DC14': -0.24909198383853606, 'DC13': -0.20447843912432512, 'DC12': -0.17548776757770254, 'DC10': -2.0194998752583646, 'DC9': -2.5853756429851726, 'DC8': -1.914752762246694, 'DC7': -1.0880218630848013, 'DC6': -0.5655909505706201, 'DC5': -0.33102380230192185, 'DC4': -0.25156938974181925, 'DC3': -0.19478724746945716, 'DC2': -0.15381580757185864, 'DC1': -0.12780866410514105, 'DC11': -0.6524107609167618}, {'DC21': 0.6946564307382606, 'DC20': -3.955498506073728, 'DC19': 1.9112926435137751, 'DC18': 0.5256568218226814, 'DC17': -0.4531635053918349, 'DC16': -0.411871096028153, 'DC15': -0.35032538910415106, 'DC14': -0.2989103806062433, 'DC13': -0.24537412694919017, 'DC12': -0.21058532109324304, 'DC10': -2.423399850310038, 'DC9': -3.102450771582208, 'DC8': -2.297703314696033, 'DC7': -1.3056262357017618, 'DC6': -0.6787091406847442, 'DC5': -0.3972285627623062, 'DC4': -0.30188326769018303, 'DC3': -0.2337446969633486, 'DC2': -0.1845789690862304, 'DC1': -0.15337039692616927, 'DC11': -0.7828929131001141}, {'DC21': 0.8104325025279707, 'DC20': -4.614748257086017, 'DC19': 2.2298414174327377, 'DC18': 0.6132662921264616, 'DC17': -0.528690756290474, 'DC16': -0.4805162786995119, 'DC15': -0.408712953954843, 'DC14': -0.34872877737395047, 'DC13': -0.2862698147740552, 'DC12': -0.24568287460878355, 'DC10': -2.8272998253617105, 'DC9': -3.619525900179242, 'DC8': -2.680653867145372, 'DC7': -1.523230608318722, 'DC6': -0.7918273307988681, 'DC5': -0.46343332322269065, 'DC4': -0.35219714563854687, 'DC3': -0.27270214645724006, 'DC2': -0.21534213060060212, 'DC1': -0.17893212974719747, 'DC11': -0.9133750652834665}, {'DC21': 0.9262085743176807, 'DC20': -5.273998008098304, 'DC19': 2.5483901913517, 'DC18': 0.7008757624302417, 'DC17': -0.6042180071891132, 'DC16': -0.5491614613708707, 'DC15': -0.4671005188055348, 'DC14': -0.3985471741416577, 'DC13': -0.3271655025989202, 'DC12': -0.2807804281243241, 'DC10': -3.2311998004133837, 'DC9': -4.136601028776277, 'DC8': -3.0636044195947103, 'DC7': -1.7408349809356822, 'DC6': -0.9049455209129922, 'DC5': -0.529638083683075, 'DC4': -0.4025110235869107, 'DC3': -0.31165959595113146, 'DC2': -0.24610529211497384, 'DC1': -0.2044938625682257, 'DC11': -1.0438572174668188}, {'DC21': 1.0419846461073907, 'DC20': -5.933247759110592, 'DC19': 2.8669389652706627, 'DC18': 0.788485232734022, 'DC17': -0.6797452580877524, 'DC16': -0.6178066440422295, 'DC15': -0.5254880836562267, 'DC14': -0.44836557090936496, 'DC13': -0.3680611904237852, 'DC12': -0.3158779816398646, 'DC10': -3.6350997754650565, 'DC9': -4.653676157373312, 'DC8': -3.4465549720440496, 'DC7': -1.9584393535526425, 'DC6': -1.0180637110271162, 'DC5': -0.5958428441434593, 'DC4': -0.4528249015352746, 'DC3': -0.3506170454450229, 'DC2': -0.2768684536293456, 'DC1': -0.2300555953892539, 'DC11': -1.1743393696501712}, {'DC21': 1.273536789686811, 'DC20': -7.2517472611351685, 'DC19': 3.5040365131085873, 'DC18': 0.9637041733415823, 'DC17': -0.8307997598850307, 'DC16': -0.7550970093849473, 'DC15': -0.6422632133576104, 'DC14': -0.5480023644447793, 'DC13': -0.4498525660735153, 'DC12': -0.3860730886709456, 'DC10': -4.442899725568402, 'DC9': -5.687826414567381, 'DC8': -4.212456076942727, 'DC7': -2.393648098786563, 'DC6': -1.2443000912553641, 'DC5': -0.7282523650642282, 'DC4': -0.5534526574320022, 'DC3': -0.42853194443280573, 'DC2': -0.33839477665808904, 'DC1': -0.28117906103131035, 'DC11': -1.435303674016876}, {'DC21': 0.8078160553380407, 'DC20': -3.723502607814983, 'DC19': 1.9771947538780736, 'DC18': 0.7233249125985501, 'DC17': -0.35504529344409574, 'DC16': -0.3628285348568265, 'DC15': -0.3147175720945957, 'DC14': -0.2714077776315079, 'DC13': -0.22415107095360698, 'DC12': -0.19322996504868212, 'DC10': -2.446831872309899, 'DC9': -1.9685373902000236, 'DC8': -2.611850504812341, 'DC7': -1.3751478094539478, 'DC6': -0.6551079733392258, 'DC5': -0.38108067904116477, 'DC4': -0.2886594545063263, 'DC3': -0.2228277111125636, 'DC2': -0.17564057809272043, 'DC1': -0.14578161115528201, 'DC11': -0.6597628877697314}, {'DC21': 0.7315041565415439, 'DC20': -3.5810846568971355, 'DC19': 1.8490444591169868, 'DC18': 0.6282323922386672, 'DC17': -0.36257561379379577, 'DC16': -0.35629432769014907, 'DC15': -0.3071243228142169, 'DC14': -0.26396917970051725, 'DC13': -0.21759352701051304, 'DC12': -0.18731589922502226, 'DC10': -2.304387873292721, 'DC9': -2.1741501411284068, 'DC8': -2.379484590623792, 'DC7': -1.2794391606642324, 'DC6': -0.6252689657496906, 'DC5': -0.36439505346141715, 'DC4': -0.27629609958482393, 'DC3': -0.2134808898981948, 'DC2': -0.16836565458576652, 'DC1': -0.13979062880523502, 'DC11': -0.6573121788187415}, {'DC21': 0.5788803589485505, 'DC20': -3.2962487550614403, 'DC19': 1.5927438695948126, 'DC18': 0.4380473515189011, 'DC17': -0.37763625449319577, 'DC16': -0.3432259133567942, 'DC15': -0.29193782425345927, 'DC14': -0.24909198383853606, 'DC13': -0.20447843912432512, 'DC12': -0.17548776757770254, 'DC10': -2.0194998752583646, 'DC9': -2.5853756429851726, 'DC8': -1.914752762246694, 'DC7': -1.0880218630848013, 'DC6': -0.5655909505706201, 'DC5': -0.33102380230192185, 'DC4': -0.25156938974181925, 'DC3': -0.19478724746945716, 'DC2': -0.15381580757185864, 'DC1': -0.12780866410514105, 'DC11': -0.6524107609167618}, {'DC21': 0.5025684601520537, 'DC20': -3.1538308041435927, 'DC19': 1.4645935748337253, 'DC18': 0.3429548311590181, 'DC17': -0.3851665748428958, 'DC16': -0.3366917061901168, 'DC15': -0.2843445749730804, 'DC14': -0.24165338590754545, 'DC13': -0.19792089518123118, 'DC12': -0.16957370175404268, 'DC10': -1.8770558762411866, 'DC9': -2.7909883939135556, 'DC8': -1.6823868480581452, 'DC7': -0.9923132142950859, 'DC6': -0.5357519429810849, 'DC5': -0.31433817672217423, 'DC4': -0.23920603482031688, 'DC3': -0.18544042625508836, 'DC2': -0.14654088406490473, 'DC1': -0.12181768175509407, 'DC11': -0.6499600519657719}, {'DC21': 0.13496662700659107, 'DC20': -3.7872518676725924, 'DC19': 1.0013267092492613, 'DC18': 0.6314473772006781, 'DC17': -0.4868312611380025, 'DC16': -0.4986115381230858, 'DC15': -0.4293491514873481, 'DC14': -0.36821320946602554, 'DC13': -0.3022502889095454, 'DC12': -0.2590580509511776, 'DC10': -2.943416694991981, 'DC9': -2.9553046575687327, 'DC8': -3.116813219768188, 'DC7': -1.2910329556261262, 'DC6': -0.67064583398843, 'DC5': -0.42294488630188865, 'DC4': -0.32986578234772096, 'DC3': -0.25936896232500684, 'DC2': -0.20821889560656587, 'DC1': -0.17599902254666516, 'DC11': -0.7974568067791891}, {'DC21': 0.28293787098724416, 'DC20': -3.623584163468875, 'DC19': 1.1984657626977784, 'DC18': 0.5669807019734191, 'DC17': -0.45043292558973363, 'DC16': -0.44681632986765524, 'DC15': -0.3835453757427185, 'DC14': -0.32850613425686237, 'DC13': -0.26965967231447197, 'DC12': -0.23120128982668595, 'DC10': -2.635444421747442, 'DC9': -2.831994986040879, 'DC8': -2.716126400594357, 'DC7': -1.2233625914456847, 'DC6': -0.6356275395158266, 'DC5': -0.3923045249685664, 'DC4': -0.3037669848124204, 'DC3': -0.2378417240398236, 'DC2': -0.1900845329283301, 'DC1': -0.1599355697328238, 'DC11': -0.7491081248250467}, {'DC21': 0.5788803589485505, 'DC20': -3.2962487550614403, 'DC19': 1.5927438695948126, 'DC18': 0.4380473515189011, 'DC17': -0.37763625449319577, 'DC16': -0.3432259133567942, 'DC15': -0.29193782425345927, 'DC14': -0.24909198383853606, 'DC13': -0.20447843912432512, 'DC12': -0.17548776757770254, 'DC10': -2.0194998752583646, 'DC9': -2.5853756429851726, 'DC8': -1.914752762246694, 'DC7': -1.0880218630848013, 'DC6': -0.5655909505706201, 'DC5': -0.33102380230192185, 'DC4': -0.25156938974181925, 'DC3': -0.19478724746945716, 'DC2': -0.15381580757185864, 'DC1': -0.12780866410514105, 'DC11': -0.6524107609167618}, {'DC21': 0.7268516029292036, 'DC20': -3.132581050857723, 'DC19': 1.7898829230433297, 'DC18': 0.37358067629164216, 'DC17': -0.34123791894492683, 'DC16': -0.29143070510136365, 'DC15': -0.24613404850882964, 'DC14': -0.2093849086293729, 'DC13': -0.17188782252925172, 'DC12': -0.14763100645321084, 'DC10': -1.7115276020138257, 'DC9': -2.46206597145732, 'DC8': -1.5140659430728627, 'DC7': -1.0203514989043598, 'DC6': -0.5305726560980168, 'DC5': -0.3003834409685996, 'DC4': -0.22547059220651866, 'DC3': -0.17326000918427395, 'DC2': -0.13568144489362294, 'DC1': -0.11174521129129968, 'DC11': -0.6040620789626193}, {'DC21': 0.16567849199586182, 'DC20': -3.9088109987042166, 'DC19': -3.0888653835984505, 'DC18': 6.523529946606442, 'DC17': 1.5088575964864244, 'DC16': -0.06857689575080264, 'DC15': -0.22045987042301718, 'DC14': -0.2573850161421518, 'DC13': -0.23433048140790752, 'DC12': -0.2116580635824817, 'DC10': -2.8612630255149565, 'DC9': -2.9567824122027533, 'DC8': -7.770599998101577, 'DC7': 2.781431471500287, 'DC6': 1.218741795981495, 'DC5': 0.2454964844630867, 'DC4': 0.08103055180406755, 'DC3': 0.014270366046934102, 'DC2': -0.029051371919764063, 'DC1': -0.060481657453453644, 'DC11': -0.8999545015727783}, {'DC21': 0.5788803589485505, 'DC20': -3.2962487550614403, 'DC19': 1.5927438695948126, 'DC18': 0.4380473515189011, 'DC17': -0.37763625449319577, 'DC16': -0.3432259133567942, 'DC15': -0.29193782425345927, 'DC14': -0.24909198383853606, 'DC13': -0.20447843912432512, 'DC12': -0.17548776757770254, 'DC10': -2.0194998752583646, 'DC9': -2.5853756429851726, 'DC8': -1.914752762246694, 'DC7': -1.0880218630848013, 'DC6': -0.5655909505706201, 'DC5': -0.33102380230192185, 'DC4': -0.25156938974181925, 'DC3': -0.19478724746945716, 'DC2': -0.15381580757185864, 'DC1': -0.12780866410514105, 'DC11': -0.6524107609167618}, {'DC21': 1.270920342496881, 'DC20': -6.360501611864135, 'DC19': 3.2513898495539237, 'DC18': 1.0737627938136711, 'DC17': -0.6571542970386525, 'DC16': -0.6374092655422618, 'DC15': -0.5482678314973631, 'DC14': -0.4706813647023368, 'DC13': -0.3877338222530671, 'DC12': -0.3336201791108442, 'DC10': -4.062431772516591, 'DC9': -4.036837904588163, 'DC8': -4.143652714609696, 'DC7': -2.2455652999217888, 'DC6': -1.107580733795722, 'DC5': -0.6458997208827022, 'DC4': -0.48991496629978165, 'DC3': -0.37865750908812934, 'DC2': -0.2986932241502073, 'DC1': -0.24802854243939484, 'DC11': -1.1816914965031409}, {'DC21': 1.1946084437003843, 'DC20': -6.218083660946287, 'DC19': 3.1232395547928364, 'DC18': 0.9786702734537881, 'DC17': -0.6646846173883524, 'DC16': -0.6308750583755843, 'DC15': -0.5406745822169843, 'DC14': -0.4632427667713462, 'DC13': -0.38117627830997314, 'DC12': -0.32770611328718424, 'DC10': -3.919987773499413, 'DC9': -4.242450655516546, 'DC8': -3.911286800421147, 'DC7': -2.1498566511320734, 'DC6': -1.0777417262061868, 'DC5': -0.6292140953029546, 'DC4': -0.47755161137827934, 'DC3': -0.36931068787376053, 'DC2': -0.2914183006432534, 'DC1': -0.24203756008934788, 'DC11': -1.179240787552151}, {'DC21': 1.0419846461073907, 'DC20': -5.933247759110592, 'DC19': 2.8669389652706627, 'DC18': 0.788485232734022, 'DC17': -0.6797452580877524, 'DC16': -0.6178066440422295, 'DC15': -0.5254880836562267, 'DC14': -0.44836557090936496, 'DC13': -0.3680611904237852, 'DC12': -0.3158779816398646, 'DC10': -3.6350997754650565, 'DC9': -4.653676157373312, 'DC8': -3.4465549720440496, 'DC7': -1.9584393535526425, 'DC6': -1.0180637110271162, 'DC5': -0.5958428441434593, 'DC4': -0.4528249015352746, 'DC3': -0.3506170454450229, 'DC2': -0.2768684536293456, 'DC1': -0.2300555953892539, 'DC11': -1.1743393696501712}, {'DC21': 0.965672747310894, 'DC20': -5.790829808192744, 'DC19': 2.7387886705095754, 'DC18': 0.693392712374139, 'DC17': -0.6872755784374525, 'DC16': -0.6112724368755521, 'DC15': -0.5178948343758478, 'DC14': -0.44092697297837435, 'DC13': -0.3615036464806913, 'DC12': -0.30996391581620464, 'DC10': -3.4926557764478785, 'DC9': -4.859288908301695, 'DC8': -3.2141890578555, 'DC7': -1.8627307047629271, 'DC6': -0.9882247034375811, 'DC5': -0.5791572185637117, 'DC4': -0.44046154661377224, 'DC3': -0.3412702242306541, 'DC2': -0.2695935301223917, 'DC1': -0.22406461303920694, 'DC11': -1.1718886606991814}, {'DC21': 0.5980709141654315, 'DC20': -6.424250871721744, 'DC19': 2.2755218049251114, 'DC18': 0.9818852584157991, 'DC17': -0.7889402647325592, 'DC16': -0.7731922688085211, 'DC15': -0.6628994108901155, 'DC14': -0.5674867965368544, 'DC13': -0.46583304020900546, 'DC12': -0.39944826501333963, 'DC10': -4.559016595198672, 'DC9': -5.023605171956872, 'DC8': -4.6486154295655435, 'DC7': -2.1614504460939674, 'DC6': -1.123118594444926, 'DC5': -0.6877639281434262, 'DC4': -0.5311212941411763, 'DC3': -0.41519876030057257, 'DC2': -0.3312715416640528, 'DC1': -0.27824595383077805, 'DC11': -1.3193854155125986}, {'DC21': 0.7460421581460845, 'DC20': -6.260583167518027, 'DC19': 2.4726608583736285, 'DC18': 0.91741858318854, 'DC17': -0.7525419291842903, 'DC16': -0.7213970605530906, 'DC15': -0.6170956351454859, 'DC14': -0.5277797213276912, 'DC13': -0.43324242361393206, 'DC12': -0.371591503888848, 'DC10': -4.251044321954134, 'DC9': -4.900295500429018, 'DC8': -4.247928610391712, 'DC7': -2.0937800819135255, 'DC6': -1.0881002999723228, 'DC5': -0.6571235668101039, 'DC4': -0.5050224966058758, 'DC3': -0.39367152201538935, 'DC2': -0.31313717898581706, 'DC1': -0.2621825010169367, 'DC11': -1.271036733558456}, {'DC21': 1.0419846461073907, 'DC20': -5.933247759110592, 'DC19': 2.8669389652706627, 'DC18': 0.788485232734022, 'DC17': -0.6797452580877524, 'DC16': -0.6178066440422295, 'DC15': -0.5254880836562267, 'DC14': -0.44836557090936496, 'DC13': -0.3680611904237852, 'DC12': -0.3158779816398646, 'DC10': -3.6350997754650565, 'DC9': -4.653676157373312, 'DC8': -3.4465549720440496, 'DC7': -1.9584393535526425, 'DC6': -1.0180637110271162, 'DC5': -0.5958428441434593, 'DC4': -0.4528249015352746, 'DC3': -0.3506170454450229, 'DC2': -0.2768684536293456, 'DC1': -0.2300555953892539, 'DC11': -1.1743393696501712}, {'DC21': 1.189955890088044, 'DC20': -5.769580054906874, 'DC19': 3.0640780187191794, 'DC18': 0.724018557506763, 'DC17': -0.6433469225394836, 'DC16': -0.566011435786799, 'DC15': -0.479684307911597, 'DC14': -0.4086584957002018, 'DC13': -0.33547057382871176, 'DC12': -0.2880212205153728, 'DC10': -3.3271275022205176, 'DC9': -4.530366485845458, 'DC8': -3.0458681528702183, 'DC7': -1.8907689893722008, 'DC6': -0.983045416554513, 'DC5': -0.5652024828101372, 'DC4': -0.426726103999974, 'DC3': -0.3290898071598397, 'DC2': -0.25873409095110983, 'DC1': -0.21399214257541255, 'DC11': -1.1259906876960286}, {'DC21': 0.6287827791547022, 'DC20': -6.545810002753368, 'DC19': -1.8146702879226002, 'DC18': 6.873967827821563, 'DC17': 1.2067485928918675, 'DC16': -0.343157626436238, 'DC15': -0.45401012982578454, 'DC14': -0.45665860321298074, 'DC13': -0.39791323270736756, 'DC12': -0.35204827764464375, 'DC10': -4.476862925721648, 'DC9': -5.025082926590891, 'DC8': -9.302402207898933, 'DC7': 1.9110139810324454, 'DC6': 0.766269035524999, 'DC5': -0.019322557378450844, 'DC4': -0.12022495998938781, 'DC3': -0.14155943192863163, 'DC2': -0.15210401797725098, 'DC1': -0.16272858873756652, 'DC11': -1.4218831103061877}, {'DC21': 1.0419846461073907, 'DC20': -5.933247759110592, 'DC19': 2.8669389652706627, 'DC18': 0.788485232734022, 'DC17': -0.6797452580877524, 'DC16': -0.6178066440422295, 'DC15': -0.5254880836562267, 'DC14': -0.44836557090936496, 'DC13': -0.3680611904237852, 'DC12': -0.3158779816398646, 'DC10': -3.6350997754650565, 'DC9': -4.653676157373312, 'DC8': -3.4465549720440496, 'DC7': -1.9584393535526425, 'DC6': -1.0180637110271162, 'DC5': -0.5958428441434593, 'DC4': -0.4528249015352746, 'DC3': -0.3506170454450229, 'DC2': -0.2768684536293456, 'DC1': -0.2300555953892539, 'DC11': -1.1743393696501712}]
        self.voltage_sets = []
        # Pre-process all voltage sets
        for i, voltage_set in enumerate(self.list_of_voltages):
            # Create a copy to work with
            remapped_voltages = voltage_set.copy()
            
            # Adjust values
            for key, value in remapped_voltages.items():
                if value > 10.0:
                    remapped_voltages[key] = 9.9
                elif value < -10.0:
                    remapped_voltages[key] = -9.9
            
            # Create the voltage array for this set
            voltages = [round(remapped_voltages[f"DC{i}"], 8) for i in range(1, 22)]
            voltages.extend([1.0, 1.1, 0.0])
            # For others, set to 0
            voltages.extend([0.0] * (32 - len(voltages)))
            
            # Add to our list of prepared voltage sets
            self.voltage_sets.append(voltages)
            
            # Print the processed voltage set
            print("Prepared voltage set {}: {}".format(i, voltages))

    def prepare(self):
        self.experiment_data.set_list_dataset("PMT_count", 1, broadcast=True)
        # Set initial voltage set based on user parameter
        self.current_voltage_set = self.initial_voltage_set
        # Ensure voltage set index is within valid range
        if self.current_voltage_set >= len(self.voltage_sets):
            self.current_voltage_set = 0
            print(f"Warning: Initial voltage set {self.initial_voltage_set} is out of range. Using 0 instead.")

    @kernel
    def run(self):
        # 
        self.setup_run()
        self.core.break_realtime()
        delay(3.0*ms)

        # Initialize zotino0
        self.zotino0.init()
        delay(10*ms)

        # Apply initial voltage set
        if self.scan_dc_voltages:
            self.zotino0.set_dac(self.voltage_sets[self.current_voltage_set], self.channels)
            delay(10*ms)

        self.dds_397_dp.set(self.frequency_397_cooling)
        self.dds_397_dp.set_att(self.attenuation_397)

        self.dds_397_far_detuned.set(self.frequency_397_far_detuned)
        self.dds_397_far_detuned.set_att(self.attenuation_397_far_detuned)
        
        self.dds_866_dp.set(self.frequency_866_cooling)
        self.dds_866_dp.set_att(self.attenuation_866)

        # self.dds_854_dp.set(self.frequency_854_dp)
        # self.dds_854_dp.set_att(self.attenuation_854_dp)

        self.dds_397_dp.sw.on()
        self.dds_866_dp.sw.on()
        self.dds_397_far_detuned.sw.on()
        # self.dds_854_dp.sw.on()

        if self.if_pulse:
            try:
                # Scan frequencies: original + 5 MHz, original - 5 MHz, original
                frequencies = [
                    self.frequency_397_far_detuned + 5*MHz,
                    self.frequency_397_far_detuned - 5*MHz,
                    self.frequency_397_far_detuned
                ]
                
                current_freq_index = 0
                current_freq_start_time = now_mu()
                freq_duration = 20*s  # 20 seconds for each frequency
                
                self.dds_397_far_detuned.set(frequencies[current_freq_index])
                
                # Add period counter for DC voltage scanning
                period_counter = 0
                
                while True:
                    # Check if it's time to switch frequency
                    elapsed_time = self.core.get_rtio_counter_mu() - current_freq_start_time
                    if elapsed_time >= self.core.seconds_to_mu(freq_duration):
                        # Move to next frequency
                        current_freq_index = (current_freq_index + 1) % len(frequencies)
                        # self.dds_397_far_detuned.set(frequencies[current_freq_index])
                        self.dds_397_far_detuned.set(200*MHz)
                        current_freq_start_time = now_mu()
                    
                    # Handle 866 blinking
                    self.dds_397_far_detuned.set(200*MHz)
                    self.dds_397_far_detuned.set_att(self.attenuation_397_far_detuned)
                    self.dds_866_dp.set_att(self.attenuation_866)
                    self.dds_866_dp.sw.on()
                    delay(self.on_secs)

                    self.dds_866_dp.set_att(self.attenuation_866 * 1.0)
                    delay(self.off_secs)

                    self.core.break_realtime()
                    self.dds_866_dp.sw.on()
                    self.dds_397_far_detuned.set(205*MHz)
                    self.dds_397_far_detuned.set_att(self.attenuation_397_far_detuned * 1.01)
                    num_pmt_pulses_on = self.ttl_pmt_input.count(
                        self.ttl_pmt_input.gate_rising(1000.0*ms)
                    )
                    delay(1.0*ms)
                    self.dds_866_dp.sw.off()
                    num_pmt_pulses_off = self.ttl_pmt_input.count(
                        self.ttl_pmt_input.gate_rising(1.0*ms)
                    )
                    delay(1.0*ms)
                    num_pmt_pulses = 10 * (num_pmt_pulses_on - num_pmt_pulses_off) / 1.0
                    self.experiment_data.insert_nd_dataset("PMT_count", 0, num_pmt_pulses)
                    self.core.break_realtime()
                    self.dds_866_dp.sw.on()
                    delay(3.0*ms)
                    
                    # Increment period counter
                    period_counter += 1
                    
                    # Check if we should change DC voltage set (every 90 periods)
                    if self.scan_dc_voltages and period_counter >= 54:
                        period_counter = 0  # Reset counter
                        
                        # Move to next voltage set
                        self.current_voltage_set = (self.current_voltage_set + 1) % len(self.voltage_sets)
                        
                        # Apply new voltage set
                        self.zotino0.set_dac(self.voltage_sets[self.current_voltage_set], self.channels)
                        
                        # Add small delay to ensure voltages are set
                        delay(10*ms)
                        
                        print("Changed to voltage set", self.current_voltage_set)
                        print("Current voltages:", self.voltage_sets[self.current_voltage_set])
            
            except TerminationRequested:
                pass